;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name dogfort.util.response, :imports nil, :requires nil, :uses nil, :defs {status-codes {:name dogfort.util.response/status-codes, :file "out/dogfort/util/response.cljs", :line 3, :column 1, :end-line 3, :end-column 18, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/util/response.cljs", :line 3, :column 6, :end-line 3, :end-column 18}}, status-cats {:name dogfort.util.response/status-cats, :file "out/dogfort/util/response.cljs", :line 45, :column 1, :end-line 45, :end-column 17, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/util/response.cljs", :line 45, :column 6, :end-line 45, :end-column 17}}, response {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/util/response.cljs", :line 95, :column 7, :end-line 95, :end-column 15, :arglists (quote ([status body & [content-type]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(status body [content-type])], :arglists ([status body & [content-type]]), :arglists-meta (nil)}}, :name dogfort.util.response/response, :variadic true, :file "out/dogfort/util/response.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(status body [content-type])], :arglists ([status body & [content-type]]), :arglists-meta (nil)}, :method-params [(status body [content-type])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists ([status body & [content-type]])}, default-response {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/util/response.cljs", :line 100, :column 7, :end-line 100, :end-column 23, :arglists (quote ([status]))}, :name dogfort.util.response/default-response, :variadic false, :file "out/dogfort/util/response.cljs", :end-column 23, :method-params ([status]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([status]))}, redirect {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/util/response.cljs", :line 116, :column 7, :end-line 116, :end-column 15, :arglists (quote ([url]))}, :name dogfort.util.response/redirect, :variadic false, :file "out/dogfort/util/response.cljs", :end-column 15, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, redirect-after-post {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/util/response.cljs", :line 121, :column 7, :end-line 121, :end-column 26, :arglists (quote ([url]))}, :name dogfort.util.response/redirect-after-post, :variadic false, :file "out/dogfort/util/response.cljs", :end-column 26, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:headers :status :content-type :body :location}, :order [:status :headers :body :content-type :location]}, :doc nil}