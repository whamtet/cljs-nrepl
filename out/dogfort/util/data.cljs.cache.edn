;; Analyzed by ClojureScript 1.7.170
{:name dogfort.util.data, :doc "Miscellaneous functions for manipulating data structures.", :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {assoc-conj {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/util/data.cljs", :line 4, :column 7, :end-line 4, :end-column 17, :arglists (quote ([map key val])), :doc "Associate a key with a value in a map. If the key already exists in the map,\n  a vector of values is associated with the key."}, :name dogfort.util.data/assoc-conj, :variadic false, :file "out/dogfort/util/data.cljs", :end-column 17, :method-params ([map key val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 3, :fn-var true, :arglists (quote ([map key val])), :doc "Associate a key with a value in a map. If the key already exists in the map,\n  a vector of values is associated with the key."}}}