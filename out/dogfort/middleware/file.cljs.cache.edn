;; Analyzed by ClojureScript 1.7.170
{:use-macros {waitp redlobster.macros, promise redlobster.macros}, :excludes #{}, :name dogfort.middleware.file, :imports nil, :requires {redlobster.promise redlobster.promise, p redlobster.promise, cljs.node cljs.node, redlobster.stream redlobster.stream, time dogfort.util.time, dogfort.util.codec dogfort.util.codec, dogfort.util.mime-type dogfort.util.mime-type, mime dogfort.util.mime-type, node cljs.node, stream redlobster.stream, codec dogfort.util.codec, dogfort.util.time dogfort.util.time}, :uses nil, :defs {fs {:name dogfort.middleware.file/fs, :file "out/dogfort/middleware/file.cljs", :line 11, :column 1, :end-line 11, :end-column 19, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/file.cljs", :line 11, :column 17, :end-line 11, :end-column 19}}, path {:name dogfort.middleware.file/path, :file "out/dogfort/middleware/file.cljs", :line 12, :column 1, :end-line 12, :end-column 23, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/file.cljs", :line 12, :column 19, :end-line 12, :end-column 23}}, file-response {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/file.cljs", :line 44, :column 8, :end-line 44, :end-column 21, :private true, :arglists (quote ([stats]))}, :private true, :name dogfort.middleware.file/file-response, :variadic false, :file "out/dogfort/middleware/file.cljs", :end-column 21, :method-params ([stats]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stats]))}, wrap-file {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/file.cljs", :line 53, :column 7, :end-line 53, :end-column 16, :arglists (quote ([app root-path & [opts]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(app root-path [opts])], :arglists ([app root-path & [opts]]), :arglists-meta (nil)}}, :name dogfort.middleware.file/wrap-file, :variadic true, :file "out/dogfort/middleware/file.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(app root-path [opts])], :arglists ([app root-path & [opts]]), :arglists-meta (nil)}, :method-params [(app root-path [opts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists ([app root-path & [opts]])}, etag {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/file.cljs", :line 31, :column 8, :end-line 31, :end-column 12, :private true, :arglists (quote ([stats]))}, :private true, :name dogfort.middleware.file/etag, :variadic false, :file "out/dogfort/middleware/file.cljs", :end-column 12, :method-params ([stats]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stats]))}, expand-dir {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/file.cljs", :line 39, :column 8, :end-line 39, :end-column 18, :private true, :arglists (quote ([path]))}, :private true, :name dogfort.middleware.file/expand-dir, :variadic false, :file "out/dogfort/middleware/file.cljs", :end-column 18, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, normalise-path {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/file.cljs", :line 15, :column 8, :end-line 15, :end-column 22, :private true, :arglists (quote ([file root]))}, :private true, :name dogfort.middleware.file/normalise-path, :variadic false, :file "out/dogfort/middleware/file.cljs", :end-column 22, :method-params ([file root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([file root]))}, last-modified {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/file.cljs", :line 36, :column 8, :end-line 36, :end-column 21, :private true, :arglists (quote ([stats]))}, :private true, :name dogfort.middleware.file/last-modified, :variadic false, :file "out/dogfort/middleware/file.cljs", :end-column 21, :method-params ([stats]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stats]))}, stat-file {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/file.cljs", :line 21, :column 8, :end-line 21, :end-column 17, :private true, :arglists (quote ([file opts]))}, :private true, :name dogfort.middleware.file/stat-file, :variadic false, :file "out/dogfort/middleware/file.cljs", :end-column 17, :method-params ([file opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([file opts]))}, crypto {:name dogfort.middleware.file/crypto, :file "out/dogfort/middleware/file.cljs", :line 13, :column 1, :end-line 13, :end-column 27, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/file.cljs", :line 13, :column 21, :end-line 13, :end-column 27}}}, :require-macros {n cljs.node-macros, cljs.node-macros cljs.node-macros, redlobster.macros redlobster.macros}, :cljs.analyzer/constants {:seen #{:get :index-files? :allow-symlinks? :etag :last-modified :headers :head :content-length :root :status :content-type :uri :body :request-method}, :order [:root :status :headers :body :content-type :content-length :last-modified :etag :index-files? :allow-symlinks? :get :request-method :head :uri]}, :doc nil}