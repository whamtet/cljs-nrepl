;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name dogfort.middleware.keyword-params, :imports nil, :requires nil, :uses nil, :defs {keyword-syntax? {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/keyword_params.cljs", :line 4, :column 8, :end-line 4, :end-column 23, :private true, :arglists (quote ([s]))}, :private true, :name dogfort.middleware.keyword-params/keyword-syntax?, :variadic false, :file "out/dogfort/middleware/keyword_params.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, keyify-params {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/keyword_params.cljs", :line 7, :column 8, :end-line 7, :end-column 21, :private true, :arglists (quote ([target]))}, :private true, :name dogfort.middleware.keyword-params/keyify-params, :variadic false, :file "out/dogfort/middleware/keyword_params.cljs", :end-column 21, :method-params ([target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([target]))}, keyword-params-request {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/keyword_params.cljs", :line 21, :column 7, :end-line 21, :end-column 29, :arglists (quote ([request])), :doc "Converts string keys in :params map to keywords. See: wrap-keyword-params.", :added "1.2"}, :added "1.2", :name dogfort.middleware.keyword-params/keyword-params-request, :variadic false, :file "out/dogfort/middleware/keyword_params.cljs", :end-column 29, :method-params ([request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([request])), :doc "Converts string keys in :params map to keywords. See: wrap-keyword-params."}, wrap-keyword-params {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/dogfort/middleware/keyword_params.cljs", :line 27, :column 7, :end-line 27, :end-column 26, :arglists (quote ([handler])), :doc "Middleware that converts the any string keys in the :params map to keywords.\n  Only keys that can be turned into valid keywords are converted.\n\n  This middleware does not alter the maps under :*-params keys. These are left\n  as strings."}, :name dogfort.middleware.keyword-params/wrap-keyword-params, :variadic false, :file "out/dogfort/middleware/keyword_params.cljs", :end-column 26, :method-params ([handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([handler])), :doc "Middleware that converts the any string keys in the :params map to keywords.\n  Only keys that can be turned into valid keywords are converted.\n\n  This middleware does not alter the maps under :*-params keys. These are left\n  as strings."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :params}, :order [:else :params]}, :doc "Middleware that converts parameter keys in the request to keywords."}