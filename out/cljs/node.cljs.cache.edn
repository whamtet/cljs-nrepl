;; Analyzed by ClojureScript 1.7.170
{:name cljs.node, :doc nil, :excludes #{}, :use-macros {require cljs.node-macros}, :require-macros {cljs.node-macros cljs.node-macros}, :uses {clj->js cljs.yunoincore}, :requires {cljs.yunoincore cljs.yunoincore}, :imports nil, :defs {log {:protocol-inline nil, :meta {:file "/Users/matthewmolloy/clojure/cljs-nrepl/out/cljs/node.cljs", :line 5, :column 7, :end-line 5, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.node/log, :variadic true, :file "out/cljs/node.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}}}